@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.travelers.Main",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1268939788 { 
   	label=travelers
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Activity686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Activity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   capacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cost: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   description: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   destination: Destination [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Destination686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Destination</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   activities: List&lt;Activity&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addActivity(activity: Activity)</TD></TR>
<TR><TD ALIGN="LEFT" >+ decrementCapacity(activity: Activity)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

GoldPassenger686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)GoldPassenger</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Main686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Main</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Passenger686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Passenger</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   balance: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   passengerNumber: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   signedUpActivities: List&lt;Activity&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ signUpForActivity(activity: Activity)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PremiumPassenger686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PremiumPassenger</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StandardPassenger686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StandardPassenger</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TravelPackage686236639[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TravelPackage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   destinations: List&lt;Destination&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   passengerCapacity: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   passengers: List&lt;Passenger&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addDestination(destination: Destination)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addPassenger(passenger: Passenger)</TD></TR>
<TR><TD ALIGN="LEFT" >+ countSignedUpPassengers(activity: Activity): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ printAvailableActivities()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printItinerary()</TD></TR>
<TR><TD ALIGN="LEFT" >+ printPassengerDetails(passenger: Passenger)</TD></TR>
<TR><TD ALIGN="LEFT" >+ printPassengerList()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    
Activity686236639 -> Destination686236639[label="destination
[0..1]"];
Destination686236639 -> Activity686236639[label="activities
[0..*]"];
Passenger686236639 -> Activity686236639[label="signedUpActivities
[0..*]"];
Passenger686236639 -> GoldPassenger686236639[arrowhead=none, arrowtail=empty, dir=both];
Passenger686236639 -> PremiumPassenger686236639[arrowhead=none, arrowtail=empty, dir=both];
Passenger686236639 -> StandardPassenger686236639[arrowhead=none, arrowtail=empty, dir=both];
TravelPackage686236639 -> Destination686236639[label="destinations
[0..*]"];
TravelPackage686236639 -> Passenger686236639[label="passengers
[0..*]"];
    
}
@enduml